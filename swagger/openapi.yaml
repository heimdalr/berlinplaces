openapi: 3.0.2
info:
  title: places
  version: 0.0.1
  description: |
    **autocomplete** and **geocode** locations (i.e. bars, pubs, hotels), streets (i.e. street names) and buildings 
    (i.e. housenumbers in streets) (see [example](/web))
tags:
  - name: complete
  - name: place
paths:

  /api/complete:
    get:
      tags:
        - complete
      summary: get completions
      description: get completions
      parameters:
        - in: query
          name: text
          schema:
            type: string
          description: the text to look up
          example:
            Tiergartenq
      responses:
        '200':
          description: OK (success)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/completionResult'
              example:
                - distance: 4
                  place:
                    id: 10561
                    class: street
                    name: Tiergartenufer
                    postcode: '10623'
                    district: Charlottenburg-Wilmersdorf
                    length: 236
                    lat: 52.513022715666686
                    lon: 13.333934396722077
                    relevance: 0
                - distance: 5
                  place:
                    id: 13969
                    class: location
                    type: restaurant
                    name: Tiergartenquelle
                    street: Bachstra√üe
                    streetID: 1012
                    houseNumber: '6'
                    postcode: '10555'
                    district: Mitte
                    lat: 52.5151591
                    lon: 13.3367789
                    relevance: 0
        '400':
          description: BadRequest - missing query parameter text
        '500':
          description: InternalServerError
  /api/place/{id}:
    get:
      tags:
        - place
      summary: get a place
      description: get a place
      parameters:
        - in: path
          required: true
          name: id
          description: id of the place
          schema:
            type: string
          example:
            10561
        - in: query
          name: houseNumber
          schema:
            type: string
          description: the housenumber to lookup in case of a street place
          example:
            2
      responses:
        '200':
          description: OK (success)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/location'
                  - $ref: '#/components/schemas/street'
                  - $ref: '#/components/schemas/houseNumber'
              example:
                id: 248645
                class: houseNumber
                street: Tiergartenufer
                streetID: 10561
                houseNumber: '2'
                postcode: '10623'
                district: Charlottenburg-Wilmersdorf
                lat: 52.5128775
                lon: 13.3352267
                relevance: 0
        '404':
          description: NotFound - a place with the given id (and houseNumber) does not exist
        '500':
          description: InternalServerError

# components
components:
  schemas:
    completionResult:
      type: object
      properties:
        distance:
          type: integer
        percentage:
          type: integer
        place:
          oneOf:
            - $ref: '#/components/schemas/location'
            - $ref: '#/components/schemas/street'
    location:
      type: object
      required:
        - id
        - class
        - type
        - name
        - street
        - streetID
        - houseNumber
        - postcode
        - district
        - lat
        - lon
        - relevance
      properties:
        id:
          type: number
          format: int32
        class:
          type: string
          enum:
            - "location"
        type:
          type: string
        name:
          type: string
        street:
          type: string
        streetID:
          type: number
          format: int32
        houseNumber:
          type: string
        postcode:
          type: string
        district:
          type: string
        lat:
          type: number
          format: float64
        lon:
          type: number
          format: float64
        relevance:
          type: number
    street:
      type: object
      required:
        - id
        - class
        - name
        - postcode
        - district
        - length
        - lat
        - lon
        - relevance
      properties:
        id:
          type: number
          format: int32
        class:
          type: string
          enum:
            - "street"
        name:
          type: string
        postcode:
          type: string
        district:
          type: string
        length:
          type: number
          format: int32
        lat:
          type: number
          format: float64
        lon:
          type: number
          format: float64
        relevance:
          type: number
    houseNumber:
      type: object
      required:
        - id
        - class
        - type
        - name
        - street
        - streetID
        - houseNumber
        - postcode
        - district
        - lat
        - lon
        - relevance
      properties:
        id:
          type: number
          format: int32
        class:
          type: string
          enum:
            - "houseNumber"
        street:
          type: string
        streetID:
          type: number
          format: int32
        houseNumber:
          type: string
        postcode:
          type: string
        district:
          type: string
        lat:
          type: number
          format: float64
        lon:
          type: number
          format: float64
        relevance:
          type: number
